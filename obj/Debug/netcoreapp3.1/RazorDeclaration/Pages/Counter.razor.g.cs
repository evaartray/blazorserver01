#pragma checksum "C:\Users\pzx98720\blazorserver01\Pages\Counter.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f410ea434e94c5b37fb291c2d673cdf25509f6e1"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace blazorserver01.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\pzx98720\blazorserver01\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\pzx98720\blazorserver01\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\pzx98720\blazorserver01\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\pzx98720\blazorserver01\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\pzx98720\blazorserver01\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\pzx98720\blazorserver01\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\pzx98720\blazorserver01\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\pzx98720\blazorserver01\_Imports.razor"
using blazorserver01;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\pzx98720\blazorserver01\_Imports.razor"
using blazorserver01.Shared;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/counter")]
    public partial class Counter : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 126 "C:\Users\pzx98720\blazorserver01\Pages\Counter.razor"
       
    private string selectedCycle = "" ;
    private string selectedPattern = "";
    private int cyclesPerTime = 0;
    private int currentCount = 0;
    private Data.Environment e = new Data.Environment(30,30);
    private string theRadio = "";
    private bool isCollapsed = true;
    private bool isOpen = true;
    private string cells = "";
    public string[] PatternsList = new string[] {
        "Add the pattern A for All",
        "Add the pattern Bipole",
        "Add the pattern Pentadecathlon"
    };
    private int rowNumber = 0;
    private int columnNumber = 0;

    private Data.BioUnit u;
    private void ClickRadio(ChangeEventArgs args) {
        theRadio = args.Value.ToString();
        

#line default
#line hidden
#nullable disable
#nullable restore
#line 147 "C:\Users\pzx98720\blazorserver01\Pages\Counter.razor"
                                 
        currentCount++;
    }
    private void IncrementCount()
    {
        currentCount++;
        e.nextConwayStep();
        
    }
    private void AddPattern()
    {
        if(selectedPattern == "aforall") {
            e.put_pattern(rowNumber, columnNumber,"aforall");
        }
        else if (selectedPattern == "bipole") {
            e.put_pattern(rowNumber, columnNumber,"bipole");
        }
        else if (selectedPattern == "pentadecathlon") {
            e.put_pattern(rowNumber, columnNumber,"pentadecathlon");
        }
    }
    private void NewCell() {
        int counter = 0;
        string[] cellList = cells.Split(new Char[] { ',', '\n' });

        while (counter < cellList.Length)
        {
            this.rowNumber = Int32.Parse(cellList[counter]);
            counter++;

            this.columnNumber = Int32.Parse(cellList[counter]);
            counter++;

            e.insert(rowNumber, columnNumber, new Data.BioUnit(rowNumber, columnNumber, e));
        }
    }
    private bool CellClick(int row, int col) {
        e.onOff(row, col);
        return true;
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
